// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

// datasource db {
//   provider = "mysql"
//   url = env("DATABASE_URL")
//   referentialIntegrity = "prisma"
// }

//USE
//url                  = env("DATABASE_URL")
datasource db {
    provider             = "mysql"
    url                  = env("PRISMA_DATABASE_URL")
    shadowDatabaseUrl    = env("PRISMA_SHADOW_DATABASE_URL")
    referentialIntegrity = "prisma"
}

model Company {
    id    Int     @id
    name  String? @db.VarChar(255)
    users User[]

    @@map("companies")
}

model User {
    id                   Int       @id @default(autoincrement())
    company              Company   @relation(fields: [companyId], references: [id])
    whatsAppId           String
    companyId            Int
    firstName            String?   @db.VarChar(255)
    lastName             String?   @db.VarChar(255)
    email                String?   @db.VarChar(255)
    dob                  String?   @db.VarChar(255)
    gender               String?   @db.VarChar(255)
    country              String?   @db.VarChar(255)
    createdAt            DateTime  @default(now())
    lastNotificationSent Int?
    updatedAt            DateTime  @updatedAt
    sessions             Session[]
    subscribed           Boolean   @default(false)
    subscriptionId       String?

    @@unique([whatsAppId, companyId])
    @@index([whatsAppId, companyId])
    @@map("users")
}

model Session {
    id           Int       @id @default(autoincrement())
    user         User      @relation(fields: [userId], references: [id])
    createdAt    DateTime  @default(now())
    lastActiveAt DateTime  @default(now())
    userId       Int
    isActive     Boolean   @default(true)
    messages     Message[]

    @@index([userId, isActive])
    @@map("sessions")
}

enum MessageRole {
    user
    system
    assistant
}

model Message {
    id        Int         @id @default(autoincrement())
    session   Session     @relation(fields: [sessionId], references: [id])
    role      MessageRole
    content   String      @db.VarChar(10000)
    sessionId Int
    createdAt DateTime    @default(now())
    timestamp Int

    @@index([sessionId, createdAt])
    @@map("messages")
}
